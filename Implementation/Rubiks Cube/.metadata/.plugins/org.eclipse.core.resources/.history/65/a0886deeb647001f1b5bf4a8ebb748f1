package cube;

public class Face {
	
	CornerCubicle[] cornerArray = new CornerCubicle[4];
	EdgeCubicle[] edgeArray = new EdgeCubicle[4]; 
	Facelet faceColor;
	
	/**
	 * The four corners and edges must respectively be input in clock-wise order.
	 * @param corner1
	 * @param corner2
	 * @param corner3
	 * @param corner4
	 * @param edge1
	 * @param edge2
	 * @param edge3
	 * @param edge4
	 * @param faceColor the color of the face is created
	 */
	
	public Face(CornerCubicle corner1, CornerCubicle corner2, CornerCubicle corner3, CornerCubicle corner4,
			EdgeCubicle edge1, EdgeCubicle edge2, EdgeCubicle edge3, EdgeCubicle edge4, Facelet faceColor) {
		
		cornerArray[0] = corner1;
		cornerArray[1] = corner2;
		cornerArray[2] = corner3;
		cornerArray[3] = corner4;
		
		edgeArray[0] = edge1;
		edgeArray[1] = edge2;
		edgeArray[2] = edge3;
		edgeArray[3] = edge4;
		
		this.faceColor = faceColor;
		
	}
	
	public Facelet getFaceColor(){
		
		return faceColor;
	}
	
	public void cwtwist(){
		CornerCubie tempCorner;
		tempCorner = cornerArray[0].getCornerCubie();
		
		cornerArray[0].setCornerCubie(cornerArray[3].getCornerCubie());
		cornerArray[3].setCornerCubie(cornerArray[2].getCornerCubie());
		cornerArray[2].setCornerCubie(cornerArray[1].getCornerCubie());
		cornerArray[1].setCornerCubie(tempCorner);
		
		EdgeCubie tempEdge;
		tempEdge = edgeArray[0].getEdgeCubie();
		
		edgeArray[0].setEdgeCubie(edgeArray[3].getEdgeCubie());
		edgeArray[3].setEdgeCubie(edgeArray[2].getEdgeCubie());
		edgeArray[2].setEdgeCubie(edgeArray[1].getEdgeCubie());
		edgeArray[1].setEdgeCubie(tempEdge);
	}
	
	public void ccwtwist(){
		CornerCubie tempCorner;
		tempCorner = cornerArray[0].getCornerCubie();
		
		cornerArray[0].setCornerCubie(cornerArray[1].getCornerCubie());
		cornerArray[1].setCornerCubie(cornerArray[2].getCornerCubie());
		cornerArray[2].setCornerCubie(cornerArray[3].getCornerCubie());
		cornerArray[3].setCornerCubie(tempCorner);
		
		EdgeCubie tempEdge;
		tempEdge = edgeArray[0].getEdgeCubie();
		
		edgeArray[0].setEdgeCubie(edgeArray[1].getEdgeCubie());
		edgeArray[1].setEdgeCubie(edgeArray[2].getEdgeCubie());
		edgeArray[2].setEdgeCubie(edgeArray[3].getEdgeCubie());
		edgeArray[3].setEdgeCubie(tempEdge);
	}
}
